Eigen::MatrixXd Interface::readVariable() {
	vector<vector<double>> matrix_temp;
	vector<double> row_data_temp;
	string line_temp, temp;
	int line, col, row, i, j;
	smatch result;
	ifstream outputfile(OUTPUT_PATH);
	regex pattern("-[0-9]+(.[0-9]+)?|[0-9]+(.[0-9]+)?", regex::icase);
	string::const_iterator iterStart;
	string::const_iterator iterEnd;
	if (!outputfile.is_open())
	{
		cout << "未成功打开结果文件:" << OUTPUT_PATH << endl;
	}
	line = 0;
	while (getline(outputfile, line_temp)) {
		if ((line_temp[0] == '!')||(line_temp.length()==0)) {
			continue;
		}
		else {
			iterStart = line_temp.begin();
			iterEnd = line_temp.end();
			row_data_temp.clear();
			while (regex_search(iterStart, iterEnd, result, pattern)) {
				row_data_temp.push_back(atof(string(result[0]).c_str()));
				iterStart = result[0].second;
			}
			matrix_temp.push_back(row_data_temp);
			line++;
		}
	}
	outputfile.close();   //关闭文件
	row = matrix_temp.size();
	col = matrix_temp[0].size();

	Eigen::MatrixXd matrix(row, col);

	for (i = 0; i < row; i++) {
		for (j = 0; j < col; j++) {
			matrix(i, j) = matrix_temp[i][j];
		}
	}
	return matrix;
}